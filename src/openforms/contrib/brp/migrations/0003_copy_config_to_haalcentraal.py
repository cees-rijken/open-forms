# Generated by Django 3.2.21 on 2023-09-23 21:02

from django.db import migrations

from openforms.contrib.haal_centraal.constants import BRPVersions


def copy_config_to_hc(apps, _):
    """
    If there was no HC prefill used, but BRPConfig did have a configuration, we can
    use that configuration to set up HC.
    """
    HaalCentraalConfig = apps.get_model("haalcentraal", "HaalCentraalConfig")
    BRPConfig = apps.get_model("brp", "BRPConfig")
    hc_config, _ = HaalCentraalConfig.objects.get_or_create(pk=1)

    # already configured, nothing to do
    if hc_config.brp_personen_service:
        return

    brp_config, _ = BRPConfig.objects.get_or_create(pk=1)
    if not brp_config.brp_service:
        return

    # only v1 was functional/supported, so we can make this explicit
    hc_config.brp_personen_service = brp_config.brp_service
    hc_config.brp_personen_version = BRPVersions.v13
    hc_config.save()


def copy_config_from_hc(apps, _):
    """
    Copy the config back from HC but only if it's V1 - v2 was not supported at the
    time these migrations were added.
    """
    HaalCentraalConfig = apps.get_model("haalcentraal", "HaalCentraalConfig")
    BRPConfig = apps.get_model("brp", "BRPConfig")
    hc_config = HaalCentraalConfig.objects.first()
    if not hc_config:
        return

    if (
        not hc_config.brp_personen_service
        or hc_config.brp_personen_version != BRPVersions.v13
    ):
        return

    brp_config, _ = BRPConfig.objects.get_or_create(pk=1)
    if brp_config.brp_service:
        return

    brp_config.brp_service = hc_config.brp_personen_service
    brp_config.save()


class Migration(migrations.Migration):

    dependencies = [
        ("brp", "0002_nice_verbose_name"),
        ("haalcentraal", "0002_copy_config_from_prefill"),
    ]

    operations = [
        migrations.RunPython(copy_config_to_hc, copy_config_from_hc),
    ]
