# Generated by Django 4.2.11 on 2024-04-12 10:12

from django.db import migrations, models
from django.db.migrations.state import StateApps
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.core.cache import caches
import openforms.payments.validators

from django.conf import settings


def migrate_to_order_id_template(
    apps: StateApps, schema_editor: BaseDatabaseSchemaEditor
) -> None:
    """Migrate from the payment order ID prefix to a customizable template.

    If this migration is run on a new instance, the default value of the model field will take effect.
    Otherwise, the default value is adapted to have the ``{uid}`` placeholder included.
    """
    GlobalConfiguration = apps.get_model("config", "GlobalConfiguration")
    VersionInfo = apps.get_model("upgrades", "VersionInfo")
    config = GlobalConfiguration.objects.first()
    if config is None:
        return

    version_info = VersionInfo.objects.first()

    is_new_deploy = version_info is None or version_info.current == settings.RELEASE
    if is_new_deploy:
        # The default value of the `payment_order_id_template` field
        # will take effect
        return

    config.payment_order_id_template = config.payment_order_id_prefix + "{uid}"
    config.save()
    caches[settings.SOLO_CACHE].clear()


class Migration(migrations.Migration):

    dependencies = [
        ("config", "0056_globalconfiguration_enable_backend_formio_validation"),
        ("upgrades", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="globalconfiguration",
            name="payment_order_id_template",
            field=models.CharField(
                default="{year}/{public_reference}/{uid}",
                help_text="Template to use when generating payment order IDs. It should be alpha-numerical and can contain the '/._-' characters. You can use the placeholder tokens: {year}, {public_reference}, {uid}.",
                max_length=48,
                validators=[
                    openforms.payments.validators.validate_payment_order_id_template
                ],
                verbose_name="Payment Order ID template",
            ),
        ),
        migrations.RunPython(migrate_to_order_id_template, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="globalconfiguration",
            name="payment_order_id_prefix",
        ),
    ]
